{"version":3,"sources":["ImageGalleryItem/ImageGalleryItem.module.css","Modal/Modal.module.css","Button/Button.module.css","Container/Container.module.css","ImageGallery/ImageGallery.module.css","Loader/Loader.module.css","Button/Button.jsx","Container/Container.jsx","ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Loader/Loader.jsx","Modal/Modal.jsx","Searchbar/Searchbar.jsx","Service/apiService.js","App.js","index.js","Searchbar/Searchbar.module.css"],"names":["module","exports","Button","onClick","className","styles","type","Container","children","container","ImageGalleryItem","id","src","alt","largeImageURL","ImageGalleryItemImage","data-source","ImageGallery","images","map","webformatURL","tags","LoaderComponent","loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","hendleKeyDown","e","code","props","showModal","hendleBecdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Overlay","Component","Searchbar","state","query","handleChange","event","setState","value","handelSubmit","preventDefault","onSubmit","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","apiService","searchQuery","currentPage","axios","get","then","response","data","hits","propTypes","PropTypes","string","isRequired","number","App","largeImageUrl","isLoading","error","onChangeQuery","fetchImages","options","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","imageModal","url","toggleModal","prevProps","loadMoreBtn","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0069ea7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2hhSL\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3PXaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__19Vd6\",\"Modal\":\"Modal_Modal__3Wf9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Cp2ND\",\"Button-primary\":\"Button_Button-primary__1jxll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Container_conteiner__k1Jmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1e4N4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2ExLC\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../Button/Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button onClick={onClick} className={styles.Button} type=\"button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styles from '../Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport styles from \"../ImageGalleryItem/ImageGalleryItem.module.css\";\r\n\r\nfunction ImageGalleryItem({ id, src, alt, largeImageURL, onClick }) {\r\n  return (\r\n    <li key={id} className={styles.ImageGalleryItem}>\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className={styles.ImageGalleryItemImage}\r\n        onClick={() => {\r\n          onClick(largeImageURL);\r\n        }}\r\n        data-source={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n}\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport styles from \"../ImageGallery/ImageGallery.module.css\";\r\n\r\nconst ImageGallery = ({ images, onClick }) => (\r\n  <ul className={styles.ImageGallery}>\r\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n      return (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          largeImageURL={largeImageURL}\r\n          onClick={onClick}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n  imgClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport styles from \"../Loader/Loader.module.css\";\r\n\r\nconst LoaderComponent = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={4000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderComponent;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n// import PropTypes from \"prop-types\";\r\nimport styles from \"../Modal/Modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n  class Modal extends Component {\r\n    componentDidMount() {\r\n      window.addEventListener('keydown', this.hendleKeyDown);\r\n    }    \r\n    componentWillUnmount() {\r\n      window.removeEventListener('keydown', this.hendleKeyDown);\r\n    }\r\n    hendleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        this.props.showModal();\r\n      }\r\n    };\r\n    hendleBecdropClick = e => {\r\n      if (e.currentTarget === e.target) {\r\n        this.props.showModal();\r\n      }\r\n    };\r\n\r\n    render(){\r\n      return createPortal(\r\n        <div className={styles.Overlay} onClick={this.hendleBecdropClick} >\r\n          <div className={styles.Modal} >\r\n            {this.props.children}            \r\n          </div>\r\n        </div>,\r\n        modalRoot,\r\n      );\r\n    }\r\n  }\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../Searchbar/Searchbar.module.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n\r\n  handelSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form onSubmit={this.handelSubmit} className={styles.SearchForm}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            \r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  query: PropTypes.string,\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n","import axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst API_KEY = '20826045-1b0ebd8606e719c8c98efe6c3';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\n\r\nconst apiService = ({ searchQuery = '', currentPage = 1}) => {\r\n  return axios.get (`${BASE_URL}/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n  .then(response => response.data.hits); \r\n};\r\n\r\napiService.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,    \r\n  currentPage: PropTypes.number.isRequired,      \r\n};\r\n\r\nexport default apiService;\r\n\r\n","import React, { Component } from \"react\";\nimport Button from \"./Button/Button\";\nimport Container from \"./Container/Container\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Loader from \"./Loader/Loader\";\nimport Modal from \"./Modal/Modal\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport apiService from \"./Service/apiService\";\nimport PropTypes from 'prop-types';\nimport \"./styles.css\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    showModal: false,\n    largeImageUrl: \"\",\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage }\n    this.setState({ isLoading: true });\n\n    apiService(options)\n      .then(images => {\n        this.setState((prevState) => ({\n          currentPage: prevState.currentPage + 1,\n          images: [...prevState.images, ...images],\n        }));\n      })\n      .catch(error => this.state({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n        \n      });\n  };\n\n  imageModal = url => {\n    this.setState({ largeImageUrl:url});\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, showModal, largeImageUrl, error } = this.state;\n    const loadMoreBtn = images.length > 0 && !isLoading;\n\n    return (\n      <Container>\n        {error && <h1>Erorr! Try again</h1>}\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery images={images} onClick={this.imageModal} />\n\n        {isLoading && <Loader />}\n        {loadMoreBtn && <Button onClick={this.fetchImages} />}\n\n        {showModal && (\n          <Modal showModal={this.toggleModal }>\n            <img src={largeImageUrl} alt=\"\" />\n          </Modal>\n        )}\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  images: PropTypes.array,\n  currentPage: PropTypes.number,\n  searchQuery: PropTypes.string,\n  largeImageUrl: PropTypes.string,\n  showModal: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1IRwm\",\"SearchForm\":\"Searchbar_SearchForm__1h1hK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3qzfi\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1RESB\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2xmlM\"};"],"sourceRoot":""}
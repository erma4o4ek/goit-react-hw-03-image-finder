{"version":3,"sources":["ImageGalleryItem/ImageGalleryItem.module.css","Modal/Modal.module.css","Button/Button.module.css","Container/Container.module.css","ImageGallery/ImageGallery.module.css","Loader/Loader.module.css","Button/Button.jsx","Container/Container.jsx","ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Loader/Loader.jsx","Modal/Modal.jsx","Searchbar/Searchbar.jsx","Service/apiService.js","App.js","index.js","Searchbar/Searchbar.module.css"],"names":["module","exports","Button","onClick","className","styles","type","Container","children","container","ImageGalleryItem","url","imgClick","ImageGalleryItemImage","src","alt","ImageGallery","images","map","id","webformatURL","user","largeImageURL","name","LoaderComponent","loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handlerKeydown","event","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","Overlay","Component","Searchbar","state","query","handleChange","setState","value","handelSubmit","preventDefault","onSubmit","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","apiService","searchQuery","currentPage","axios","get","then","response","data","hits","propTypes","PropTypes","string","isRequired","number","App","showModal","largeImageUrl","isLoading","error","onChangeQuery","fetchImages","options","prevState","page","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","largeImage","toggleModal","prevProps","loadMoreBtn","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d782fa62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2hhSL\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3PXaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__19Vd6\",\"Modal\":\"Modal_Modal__3Wf9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Cp2ND\",\"Button-primary\":\"Button_Button-primary__1jxll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Container_conteiner__k1Jmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1e4N4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2ExLC\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../Button/Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button onClick={onClick} className={styles.Button} type=\"button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styles from '../Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../ImageGalleryItem/ImageGalleryItem.module.css\";\r\n\r\nconst ImageGalleryItem = ({ url, imgClick }) => (\r\n  <li className={styles.ImageGalleryItem}>\r\n    <img\r\n      className={styles.ImageGalleryItemImage}\r\n      src={url}\r\n      alt=\"img\"\r\n      onClick={imgClick}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport styles from \"../ImageGallery/ImageGallery.module.css\";\r\n\r\nconst ImageGallery = ({ images, imgClick }) => (\r\n  <ul className={styles.ImageGallery}>\r\n    {images.map(({ id, webformatURL, user, largeImageURL }) => {\r\n      const handleClick = () => imgClick(largeImageURL);\r\n      return (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          name={user}\r\n          url={webformatURL}\r\n          onClick={handleClick}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  imgClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport styles from \"../Loader/Loader.module.css\";\r\n\r\nconst LoaderComponent = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={4000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderComponent;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../Modal/Modal.module.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handlerKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handlerKeydown);\r\n  }\r\n\r\n  handlerKeydown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div onClick={this.handleBackdropClick} className={styles.Overlay}>\r\n        <div className={styles.Modal}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../Searchbar/Searchbar.module.css\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n\r\n  handelSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form onSubmit={this.handelSubmit} className={styles.SearchForm}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            \r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  query: PropTypes.string,\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n","import axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst API_KEY = '20826045-1b0ebd8606e719c8c98efe6c3';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\n\r\nconst apiService = ({ searchQuery = '', currentPage = 1}) => {\r\n  return axios.get (`${BASE_URL}/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n  .then(response => response.data.hits); \r\n};\r\n\r\napiService.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,    \r\n  currentPage: PropTypes.number.isRequired,      \r\n};\r\n\r\nexport default apiService;\r\n\r\n","import React, { Component } from \"react\";\nimport Button from \"./Button/Button\";\nimport Container from \"./Container/Container\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Loader from \"./Loader/Loader\";\nimport Modal from \"./Modal/Modal\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport apiService from \"./Service/apiService\";\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  state = {\n    images: [],\n    showModal: false,\n    largeImageUrl: \"\",\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage }\n    this.setState({ isLoading: true });\n\n    apiService(options)\n      .then(images => {\n        this.setState((prevState) => ({\n          currentPage: prevState.page + 1,\n          images: [...prevState.images, ...images],\n        }));\n      })\n      .catch(error => this.state({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n        \n      });\n  };\n\n  largeImage = (largeImageURL) => {\n    this.setState({ largeImageUrl:largeImageURL});\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, showModal, largeImageUrl, error } = this.state;\n    const loadMoreBtn = images.length > 0 && !isLoading;\n\n    return (\n      <Container>\n        {error && <h1>Erorr! Try again</h1>}\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery images={images} imgClick={this.largeImage} />\n\n        {isLoading && <Loader />}\n        {loadMoreBtn && <Button onClick={this.fetchImages} />}\n\n        {showModal && (\n          <Modal onClose={this.largeImage}>\n            <img src={largeImageUrl} alt=\"\" />\n          </Modal>\n        )}\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  images: PropTypes.array,\n  currentPage: PropTypes.number,\n  searchQuery: PropTypes.string,\n  largeImageUrl: PropTypes.string,\n  showModal: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1IRwm\",\"SearchForm\":\"Searchbar_SearchForm__1h1hK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3qzfi\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1RESB\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2xmlM\"};"],"sourceRoot":""}